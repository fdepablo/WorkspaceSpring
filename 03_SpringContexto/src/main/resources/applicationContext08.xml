<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- Hay veces que nos interesa simpflicar la inyeccion de dependecias que 
		tenga un objeto con otros objetos. Spring nos proporciona una manera de hacer 
		este tipo de inyecciones de una manera simple mediante una propiedad de los 
		beans que se llama "Autowired" "Autowire" es una propiedad para auto inyectar 
		objetos. De esta manera cuando establecemos que un bean tenga la propiedad 
		autowired busque automaticamente objetos para inyectar en dicho bean. Tenemos 
		varios tipos de autowired, los mas importantes: 
			1. byType: El tipo del bean 
			de la propiedad tiene que coincidir con el tipo del bean que queremos inyectar. 
			En este caso spring buscar치 en su contexto un bean del mismo tipo que necesita 
			el bean que lo llama 
			2. byName: El nombre del bean de la propiedad tiene 
			que coincidir con el id del bean que queremos inyectar. En este caso spring 
			buscar치 en su contexto un bean cuyo id coincida con el nombre de la propiedad 
			del bean que lo llama -->

	<bean id="direccion" class="ejemplo08.Direccion">
		<property name="tipoVia" value="Pi침a"></property>
		<property name="nombreVia" value="Debajo del mar"></property>
		<property name="cp" value="01234"></property>
		<property name="pais" value="Aguas Internacionales"></property>
	</bean>
	
	
	<bean id="ordenador" class="ejemplo08.Ordenador">
		<property name="id" value="1"></property>
		<property name="marca" value="Osos"></property>
	</bean> 

	<!-- 
	3. "byType" Autowiring if there is exactly one bean of the property type in 
 		the container. If there is more than one, a fatal error is raised, and you 
 		cannot use byType autowiring for that bean. if there is none, nothing special 
 		happens.
	 -->
	<bean id="persona" class="ejemplo08.Persona" autowire="byType">
		<property name="nombre" value="Bob Esponja"></property>
		<property name="edad" value="50"></property>
		<property name="peso" value="0.200"></property>
	</bean>

	<!-- En este caso, si lo hacemos por byName, inyectara el bean con id "direccion 
		Si lo hacemos byType, dar치 una excepcion ya que hay dos posibles candidatos 
		a inyectar, "direccion2" y "direccion" -->

	<bean id="pedido" class="ejemplo08.Pedido">
		<property name="id" value="1"></property>
		<property name="importe" value="100"></property>
	</bean>

	<bean id="pedido2" class="ejemplo08.Pedido">
		<property name="id" value="2"></property>
		<property name="importe" value="200"></property>
	</bean>
	
	<!-- 
	2. "byName" Autowiring by property name. If a bean of class Cat 
 	exposes a "dog" property, Spring will try to set this to the value of the bean 
 	"dog" in the current container. If there is no matching bean by name, nothing 
 	special happens. 
	 -->
	<bean id="cliente" class="ejemplo08.Cliente" autowire="byName">
		<property name="id" value="1"></property>
		<property name="nombre" value="Tony Stark"></property>
	</bean>
</beans>
